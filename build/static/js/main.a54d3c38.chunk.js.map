{"version":3,"sources":["assets/question-circle.svg","localization/index.ts","localization/en/index.ts","localization/ru/index.ts","store/reducers/sidebar.ts","firebase.ts","api/bossesApi.ts","store/reducers/bosses.ts","store/reducers/settings.ts","components/common/Block/Block.tsx","components/common/Input/Input.tsx","components/common/Switcher/Switcher.tsx","components/Header/Header.tsx","components/Sidebar/Sidebar.tsx","components/BossCard/BossCard.tsx","components/BossCard/CardLoader/CardLoader.tsx","pages/BossList/BossList.tsx","pages/RacesStonesGods/RacesStonesGods.tsx","pages/Alchemy/Alchemy.tsx","pages/Equipment/Equipment.tsx","pages/GameRules/GameRules.tsx","pages/Perks/Perks.tsx","pages/Social/Social.tsx","pages/Spoilers/Spoilers.tsx","pages/TalentsActiveEffectsScreams/TalentsActiveEffectsScreams.tsx","pages/Tiers/Tiers.tsx","pages/VampiresWerwolves/VampiresWerwolves.tsx","App.tsx","store/index.ts","index.tsx"],"names":["module","exports","resources","en","translation","header","links","discord","author","forContact","sidebar","search","placeholder","categories","bossList","racesStonesGods","perks","equipment","tiers","talentsActiveEffectsScreams","vampiresWerewolves","spoilers","social","gamesRules","alchemy","buttons","ease","medium","strong","dangerBoys","guildBosses","priests","dragons","superBosses","card","exp","ru","initialState","active","actions","payload","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","getAllBosses","arrWithBosses","collection","get","then","querySnapshot","forEach","doc","obj","_id","id","data","getBosses","a","res","where","orderBy","sort","b","experience","addNewBoss","add","docRef","console","log","catch","error","addArrayOfBosses","bossesArr","activeCategory","bossesList","errors","isLoading","initialized","dispatch","getState","bosses","content","bossesApi","setTimeout","language","Block","children","className","cn","Input","Switcher","first","second","value","onChange","checked","Header","useDispatch","t","useTranslation","setLanguage","SettingsActions","React","useState","languageUsed","setLanguageUsed","useEffect","href","target","prev","Sidebar","history","useHistory","useSelector","state","categoriesList","useMemo","title","name","path","setActiveCategory","sidebarActions","handleSetActive","useCallback","push","map","item","idx","key","onClick","BossCard","bossInfo","additionalInfo","location","src","questionCircleSvg","alt","version","x","y","viewBox","fill","d","CardLoader","speed","width","height","backgroundColor","foregroundColor","rx","ry","cx","cy","r","BossList","i18n","settings","bossesSelectorCategories","color","shadowColor","length","handleSelectClick","category","bossesActions","Helmet","style","boxShadow","el","Array","RacesStonesGods","Alchemy","Equipment","GameRules","Perks","Social","Spoilers","TalentsActiveEffectsScreams","Tiers","VampiresWerewolves","App","changeLanguage","defaultTitle","titleTemplate","property","component","exact","VampiresWerwolves","to","combineReducers","action","arrived","Number","sortedList","rootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","use","initReactI18next","init","lng","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a54d3c38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/question-circle.530d61b9.svg\";","import enResource from './en'\r\nimport ruResource from './ru'\r\n\r\nexport const resources = {\r\n  en: { translation: { ...enResource } },\r\n  ru: { translation: { ...ruResource } },\r\n}\r\n","export default {\r\n  header: {\r\n    links: {\r\n      discord: 'Discord',\r\n      author: 'Blind Walker',\r\n      forContact: 'For contact',\r\n    },\r\n  },\r\n  sidebar: {\r\n    search: {\r\n      placeholder: 'Search (in development)',\r\n    },\r\n    categories: {\r\n      bossList: 'Boss list',\r\n      racesStonesGods: 'Races/Stones/Gods',\r\n      perks: 'Perks',\r\n      equipment: 'Equipment',\r\n      tiers: 'Tiers',\r\n      talentsActiveEffectsScreams: 'Talents/Active-effects/Screams',\r\n      vampiresWerewolves: 'Vampires and Werewolves',\r\n      spoilers: 'Spoilers',\r\n      social: 'Social',\r\n      gamesRules: \"Game's rules\",\r\n      alchemy: 'Alchemy',\r\n    },\r\n  },\r\n  bossList: {\r\n    buttons: {\r\n      ease: 'Ease',\r\n      medium: 'Medium',\r\n      strong: 'Strong',\r\n      dangerBoys: 'Danger boys',\r\n      guildBosses: 'Guild bosses',\r\n      priests: 'Priests',\r\n      dragons: 'Dragons',\r\n      superBosses: 'Super bosses',\r\n    },\r\n    card: {\r\n      exp: 'Experience',\r\n    },\r\n  },\r\n}\r\n","export default {\r\n  header: {\r\n    links: {\r\n      discord: 'Discord',\r\n      author: 'Blind Walker',\r\n      forContact: 'По поводу ошибок',\r\n    },\r\n  },\r\n  sidebar: {\r\n    search: {\r\n      placeholder: 'Поиск (в разработке)',\r\n    },\r\n    categories: {\r\n      bossList: 'Босс-лист',\r\n      racesStonesGods: 'Рассы/Камни/Боги',\r\n      perks: 'Перки',\r\n      equipment: 'Экипировка',\r\n      tiers: 'Тиры',\r\n      talentsActiveEffectsScreams: 'Таланты/Активные эффекты/Крики',\r\n      vampiresWerewolves: 'Вампиры и Оборотни',\r\n      spoilers: 'Спойлеры',\r\n      social: 'Социалочка',\r\n      gamesRules: 'Правила игры',\r\n      alchemy: 'Алхимия',\r\n    },\r\n  },\r\n  bossList: {\r\n    buttons: {\r\n      ease: 'Легкие',\r\n      medium: 'Средние',\r\n      strong: 'Сильные',\r\n      dangerBoys: 'Особо опасные мальчишки',\r\n      guildBosses: 'Боссы гильдий',\r\n      priests: 'Жрецы',\r\n      dragons: 'Именные драконы',\r\n      superBosses: 'Супер боссы',\r\n    },\r\n    card: {\r\n      exp: 'Опыт',\r\n    },\r\n  },\r\n}\r\n","import { TInferActions, TBaseThunk } from '../../types/types'\r\n\r\ntype TInitialState = typeof initialState\r\n\r\nconst initialState = {\r\n  active: 'BossList',\r\n}\r\n\r\nexport default (state = initialState, action: TActions): TInitialState => {\r\n  switch (action.type) {\r\n    case 'sidebar/SET_ACTIVE_CATEGORY':\r\n      return {\r\n        ...state,\r\n        active: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype TActions = TInferActions<typeof actions>\r\n\r\nexport const actions = {\r\n  setActiveCategory: (payload: string) =>\r\n    ({ type: 'sidebar/SET_ACTIVE_CATEGORY', payload } as const),\r\n}\r\n\r\ntype TThunk = TBaseThunk<TActions>\r\n","import firebase from 'firebase'\r\n\r\nfirebase.initializeApp({\r\n  apiKey: 'AIzaSyAzC1se-FmMtEmKdo6rpR1CbQnnpnkEYx4',\r\n  authDomain: 'requiem-library.firebaseapp.com',\r\n  databaseURL: 'https://requiem-library.firebaseio.com',\r\n  projectId: 'requiem-library',\r\n  storageBucket: 'requiem-library.appspot.com',\r\n  messagingSenderId: '369536495580',\r\n  appId: '1:369536495580:web:3a65e4fadc689ef024a919',\r\n  measurementId: 'G-FVEBT02QL0',\r\n})\r\n\r\nconst db = firebase.firestore()\r\n\r\nexport default db\r\n","import db from '../firebase'\r\n\r\nimport { TBoss, TAddBoss, TBossesAvailableTypes } from '../types/types'\r\n\r\nexport default {\r\n  getAllBosses: () => {\r\n    let arrWithBosses = [] as Array<Object>\r\n    const res = db\r\n      .collection('bosses')\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const obj = {\r\n            _id: doc.id,\r\n            ...doc.data(),\r\n          }\r\n          return (arrWithBosses = [...arrWithBosses, obj])\r\n        })\r\n        return arrWithBosses\r\n      })\r\n    return res\r\n  },\r\n  getBosses: async (type: TBossesAvailableTypes) => {\r\n    let arrWithBosses = [] as Array<TBoss>\r\n    const res = db\r\n      .collection('bosses')\r\n      .where('category', '==', type)\r\n      .orderBy('name')\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const obj = {\r\n            _id: doc.id,\r\n            ...doc.data(),\r\n          } as TBoss\r\n          return (arrWithBosses = [...arrWithBosses, obj])\r\n        })\r\n        const result = arrWithBosses.sort((a, b) => +a.experience - +b.experience)\r\n        return result\r\n      })\r\n    return res\r\n  },\r\n  addNewBoss: (data: TAddBoss) => {\r\n    db.collection('bosses')\r\n      .add(data)\r\n      .then(function (docRef) {\r\n        console.log('Document was successfully written')\r\n        return 'Document was successfully written'\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error adding document: ', error)\r\n        return error\r\n      })\r\n  },\r\n  addArrayOfBosses: (bossesArr: Array<TAddBoss>) => {\r\n    bossesArr.forEach((data) => {\r\n      db.collection('bosses')\r\n        .add(data)\r\n        .then(function (docRef) {\r\n          console.log('Document was successfully written')\r\n          return 'Document was successfully written'\r\n        })\r\n        .catch(function (error) {\r\n          console.log('Error adding document: ', error)\r\n          return error\r\n        })\r\n    })\r\n  },\r\n}\r\n","import {\r\n  TInferActions,\r\n  TBaseThunk,\r\n  TBoss,\r\n  TBossesAvailableTypes,\r\n  TAddBoss,\r\n} from '../../types/types'\r\n\r\nimport { bossesApi } from '../../api'\r\n\r\ntype TInitialState = typeof initialState\r\n\r\nconst initialState = {\r\n  activeCategory: 'ease' as TBossesAvailableTypes,\r\n  bossesList: [] as Array<TBoss>,\r\n  errors: [],\r\n  isLoading: false,\r\n  initialized: false,\r\n}\r\n\r\nexport default (state = initialState, action: TActions): TInitialState => {\r\n  switch (action.type) {\r\n    case 'bosses/SET_ACTIVE_CATEGORY':\r\n      return {\r\n        ...state,\r\n        activeCategory: action.payload,\r\n      }\r\n    case 'bosses/SET_BOSSES': {\r\n      const arrived = action.payload\r\n      //@ts-ignore\r\n      const sortedList = arrived.sort((a, b) => Number(a.experience) > Number(b.experience))\r\n      return {\r\n        ...state,\r\n        bossesList: arrived,\r\n      }\r\n    }\r\n    case 'bosses/SET_ERRORS': {\r\n      const arrived = action.payload\r\n      //@ts-ignore\r\n      const sortedList = arrived.sort((a, b) => Number(a.experience) > Number(b.experience))\r\n      return {\r\n        ...state,\r\n        bossesList: sortedList,\r\n      }\r\n    }\r\n    case 'bosses/SET_INITIALIZED':\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      }\r\n    case 'bosses/SET_IS_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype TActions = TInferActions<typeof actions>\r\n\r\nexport const actions = {\r\n  setActiveCategory: (payload: TBossesAvailableTypes) =>\r\n    ({ type: 'bosses/SET_ACTIVE_CATEGORY', payload } as const),\r\n  setBosses: (payload: Array<TBoss>) => ({ type: 'bosses/SET_BOSSES', payload } as const),\r\n  setErrors: (payload: any) => ({ type: 'bosses/SET_ERRORS', payload } as const),\r\n  setIsLoading: (payload: boolean) => ({ type: 'bosses/SET_IS_LOADING', payload } as const),\r\n  setInitialized: () => ({ type: 'bosses/SET_INITIALIZED' } as const),\r\n}\r\n\r\ntype TThunk = TBaseThunk<TActions>\r\n\r\nexport const getBosses = (type: TBossesAvailableTypes): TThunk => {\r\n  return async (dispatch, getState) => {\r\n    const {\r\n      content: { bosses },\r\n    } = getState()\r\n    dispatch(actions.setIsLoading(true))\r\n    const res = await bossesApi.getBosses(type)\r\n\r\n    if (!bosses.initialized) {\r\n      dispatch(actions.setInitialized())\r\n    }\r\n\r\n    dispatch(actions.setBosses(res))\r\n    setTimeout(async () => {\r\n      dispatch(actions.setIsLoading(false))\r\n    }, 300)\r\n  }\r\n}\r\n\r\nexport const addNewBoss = (data: TAddBoss): TThunk => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.setIsLoading(true))\r\n    const res = await bossesApi.addNewBoss(data)\r\n\r\n    dispatch(actions.setIsLoading(false))\r\n  }\r\n}\r\n\r\nexport const addArrayOfBosses = (bossesArr: Array<TAddBoss>): TThunk => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.setIsLoading(true))\r\n    const res = await bossesApi.addArrayOfBosses(bossesArr)\r\n\r\n    dispatch(actions.setIsLoading(false))\r\n  }\r\n}\r\n","import { TInferActions, TBaseThunk } from '../../types/types'\r\n\r\ntype TInitialState = typeof initialState\r\n\r\nconst initialState = {\r\n  language: 'ru',\r\n}\r\n\r\nexport default (state = initialState, action: TActions): TInitialState => {\r\n  switch (action.type) {\r\n    case 'sidebar/SET_LANGUAGE':\r\n      return {\r\n        ...state,\r\n        language: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype TActions = TInferActions<typeof actions>\r\n\r\nexport const actions = {\r\n  setLanguage: (payload: string) => ({ type: 'sidebar/SET_LANGUAGE', payload } as const),\r\n}\r\n\r\ntype TThunk = TBaseThunk<TActions>\r\n","import React from 'react'\r\nimport cn from 'classnames'\r\n\r\nimport './Block.scss'\r\n\r\ntype Props = {\r\n  children: React.ReactNode\r\n  sidebar?: boolean\r\n}\r\nconst Block: React.FC<Props> = ({ children, sidebar }) => {\r\n  return <div className={cn('block', { sidebar: sidebar })}>{children}</div>\r\n}\r\n\r\nexport default Block\r\n","import React from 'react'\r\n\r\nimport './Input.scss'\r\n\r\ntype Props = {\r\n  placeholder?: string\r\n}\r\n\r\nconst Input: React.FC<Props> = ({ placeholder }) => {\r\n  return (\r\n    <div className=\"input-field\">\r\n      <input placeholder={placeholder} type=\"text\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport cn from 'classnames'\r\n\r\nimport './Switcher.scss'\r\n\r\ntype Props = {\r\n  first: string\r\n  second: string\r\n  value: boolean\r\n  onChange: any\r\n}\r\n\r\nconst Switcher: React.FC<Props> = ({ first, second, value, onChange }) => (\r\n  <div className=\"switcher\">\r\n    <span className={cn('left-language', { active: !value })}>{first}</span>\r\n    <input type=\"checkbox\" className=\"check\" checked={value} onChange={onChange} />\r\n    <span className={cn('right-language', { active: value })}>{second}</span>\r\n  </div>\r\n)\r\n\r\nexport default Switcher\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { actions as SettingsActions } from '../../store/reducers/settings'\r\n\r\nimport { Switcher } from '../common'\r\n\r\nimport './Header.scss'\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n  const { t } = useTranslation()\r\n  const { setLanguage } = SettingsActions\r\n  const [languageUsed, setLanguageUsed] = React.useState(false)\r\n\r\n  useEffect(() => {\r\n    const changeLang = (bool: boolean) => {\r\n      return bool ? dispatch(setLanguage('en')) : dispatch(setLanguage('ru'))\r\n    }\r\n\r\n    changeLang(languageUsed)\r\n  }, [languageUsed])\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"header__logo-block\">\r\n          <span className=\"logo\">Requiem Library</span>\r\n        </div>\r\n        <div className=\"header__rightside\">\r\n          <ul className=\"header__nav-items\">\r\n            <li className=\"header__nav-items--item\">\r\n              <a href=\"https://discord.gg/4yqdafW\" target=\"_blank\">\r\n                {t('header.links.discord')}\r\n              </a>\r\n            </li>\r\n            <li className=\"header__nav-items--item\">\r\n              <a href=\"https://www.youtube.com/blindwalker\" target=\"_blank\">\r\n                {t('header.links.author')}\r\n              </a>\r\n            </li>\r\n            <li className=\"header__nav-items--item\">\r\n              <a href=\"https://vk.com/id158962184\" target=\"_blank\">\r\n                {t('header.links.forContact')}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <Switcher\r\n            first=\"RU\"\r\n            second=\"EN\"\r\n            value={languageUsed}\r\n            onChange={() => setLanguageUsed((prev) => !prev)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useMemo } from 'react'\r\nimport cn from 'classnames'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\n\r\nimport { Block, Input } from '../common'\r\n\r\nimport './Sidebar.scss'\r\nimport { TAppState } from '../../types/types'\r\n\r\ntype TMapState = {\r\n  active: string\r\n}\r\n\r\nconst Sidebar = () => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const { t } = useTranslation()\r\n  const { active } = useSelector<TAppState, TMapState>((state) => ({\r\n    active: state.sidebar.active,\r\n  }))\r\n\r\n  const categoriesList = useMemo(\r\n    () => [\r\n      { title: t('sidebar.categories.bossList'), name: 'BossList', path: '/boss-list' },\r\n      {\r\n        title: t('sidebar.categories.racesStonesGods'),\r\n        name: 'Races/Stones/Gods',\r\n        path: '/races-stones-gods',\r\n      },\r\n      { title: t('sidebar.categories.perks'), name: 'Perks', path: '/perks' },\r\n      { title: t('sidebar.categories.equipment'), name: 'Equipment', path: '/equipment' },\r\n      { title: t('sidebar.categories.tiers'), name: 'Tiers', path: '/tiers' },\r\n      {\r\n        title: t('sidebar.categories.talentsActiveEffectsScreams'),\r\n        name: 'Talents/Active-effects/Screams',\r\n        path: '/talents-active_effects-screams',\r\n      },\r\n      {\r\n        title: t('sidebar.categories.vampiresWerewolves'),\r\n        name: 'Vampires/Werewolves',\r\n        path: '/vampires-werewolves',\r\n      },\r\n      { title: t('sidebar.categories.spoilers'), name: 'Spoilers', path: '/spoilers' },\r\n      { title: t('sidebar.categories.social'), name: 'Social', path: '/social' },\r\n      { title: t('sidebar.categories.gamesRules'), name: 'GameRules', path: '/games-rules' },\r\n      { title: t('sidebar.categories.alchemy'), name: 'Alchemy', path: '/alchemy' },\r\n    ],\r\n    [t],\r\n  )\r\n\r\n  const { setActiveCategory } = sidebarActions\r\n\r\n  const handleSetActive = React.useCallback((name: string, path: string) => {\r\n    dispatch(setActiveCategory(name))\r\n    history.push(path)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"search\">\r\n        <Input placeholder={t('sidebar.search.placeholder')} />\r\n      </div>\r\n      <div className=\"categories\">\r\n        <Block sidebar>\r\n          <ul className=\"categories-list\">\r\n            {categoriesList?.map((item, idx) => (\r\n              <li\r\n                key={`${idx}-${item.name}`}\r\n                onClick={() => handleSetActive(item.name, item.path)}\r\n                className={cn('categories-list__item', { active: item.name === active })}>\r\n                <span>{item.title}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </Block>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport questionCircleSvg from '../../assets/question-circle.svg'\r\nimport './BossCard.scss'\r\n\r\nimport { TBoss } from '../../types/types'\r\n\r\ntype Props = {\r\n  idx: number\r\n  bossInfo: TBoss\r\n  bossesList: Array<TBoss>\r\n}\r\n\r\nconst BossCard: React.FC<Props> = ({ idx, bossInfo, bossesList }) => {\r\n  const { t } = useTranslation()\r\n  const { name, experience, additionalInfo, location, links } = bossInfo\r\n\r\n  return (\r\n    <div className=\"bossCard\">\r\n      <img src={questionCircleSvg} alt=\"Info icon\" className=\"bossCard-info\"></img>\r\n      <div className=\"bossCard-content\">\r\n        {links?.name ? (\r\n          <h4 className=\"bossCard-content__name\">\r\n            <a href={links.name} target=\"_blank\">\r\n              {name}\r\n            </a>\r\n          </h4>\r\n        ) : (\r\n          <h4 className=\"bossCard-content__name\">{name}</h4>\r\n        )}\r\n        <span className=\"bossCard-content__experience\">\r\n          <b>{t('bossList.card.exp')}:</b> {experience}\r\n        </span>\r\n        {links?.additionalInfo ? (\r\n          <p className=\"bossCard-content__additional\">\r\n            <a href={links.additionalInfo} target=\"_blank\">\r\n              {additionalInfo}\r\n            </a>\r\n          </p>\r\n        ) : (\r\n          <p className=\"bossCard-content__additional\">{additionalInfo}</p>\r\n        )}\r\n\r\n        <div className=\"bossCard-content__location\">\r\n          {links?.location ? (\r\n            <a href={links.location} target=\"_blank\">\r\n              <div className=\"bossCard-content__location--icon\">\r\n                <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n                  <g>\r\n                    <g>\r\n                      <path\r\n                        fill=\"black\"\r\n                        d=\"M256,0C161.896,0,85.333,76.563,85.333,170.667c0,28.25,7.063,56.26,20.49,81.104L246.667,506.5\r\n\t\t\tc1.875,3.396,5.448,5.5,9.333,5.5s7.458-2.104,9.333-5.5l140.896-254.813c13.375-24.76,20.438-52.771,20.438-81.021\r\n\t\t\tC426.667,76.563,350.104,0,256,0z M256,256c-47.052,0-85.333-38.281-85.333-85.333c0-47.052,38.281-85.333,85.333-85.333\r\n\t\t\ts85.333,38.281,85.333,85.333C341.333,217.719,303.052,256,256,256z\"\r\n                      />\r\n                    </g>\r\n                  </g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                </svg>\r\n              </div>\r\n              <span className=\"bossCard-content__location--text\">{location}</span>\r\n            </a>\r\n          ) : (\r\n            <>\r\n              <div className=\"bossCard-content__location--icon\">\r\n                <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n                  <g>\r\n                    <g>\r\n                      <path\r\n                        fill=\"black\"\r\n                        d=\"M256,0C161.896,0,85.333,76.563,85.333,170.667c0,28.25,7.063,56.26,20.49,81.104L246.667,506.5\r\n\t\t\tc1.875,3.396,5.448,5.5,9.333,5.5s7.458-2.104,9.333-5.5l140.896-254.813c13.375-24.76,20.438-52.771,20.438-81.021\r\n\t\t\tC426.667,76.563,350.104,0,256,0z M256,256c-47.052,0-85.333-38.281-85.333-85.333c0-47.052,38.281-85.333,85.333-85.333\r\n\t\t\ts85.333,38.281,85.333,85.333C341.333,217.719,303.052,256,256,256z\"\r\n                      />\r\n                    </g>\r\n                  </g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                  <g></g>\r\n                </svg>\r\n              </div>\r\n              <span className=\"bossCard-content__location--text\">{location}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BossCard\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst CardLoader = () => {\r\n  return (\r\n    <ContentLoader\r\n      speed={2}\r\n      width={293}\r\n      height={181}\r\n      viewBox=\"0 0 293 181\"\r\n      backgroundColor=\"#f3f3f3\"\r\n      foregroundColor=\"#ecebeb\">\r\n      <rect x=\"24\" y=\"27\" rx=\"3\" ry=\"3\" width=\"191\" height=\"24\" />\r\n      <rect x=\"48\" y=\"26\" rx=\"3\" ry=\"3\" width=\"52\" height=\"6\" />\r\n      <rect x=\"24\" y=\"59\" rx=\"3\" ry=\"3\" width=\"111\" height=\"20\" />\r\n      <rect x=\"24\" y=\"88\" rx=\"3\" ry=\"3\" width=\"243\" height=\"20\" />\r\n      <rect x=\"51\" y=\"128\" rx=\"3\" ry=\"3\" width=\"92\" height=\"20\" />\r\n      <rect x=\"24\" y=\"128\" rx=\"3\" ry=\"3\" width=\"19\" height=\"20\" />\r\n      <circle cx=\"272\" cy=\"15\" r=\"10\" />\r\n    </ContentLoader>\r\n  )\r\n}\r\n\r\nexport default CardLoader\r\n","import React, { useMemo } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\nimport cn from 'classnames'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\nimport { actions as bossesActions, getBosses, addArrayOfBosses } from '../../store/reducers/bosses'\r\n\r\nimport { BossCard, BossCardLoader } from '../../components'\r\n\r\nimport './BossList.scss'\r\n\r\nimport { TAppState, TBossesAvailableTypes, TBoss } from '../../types/types'\r\n\r\nimport test from '../../data/bosses'\r\n\r\ntype Selector = {\r\n  title: string\r\n  name: TBossesAvailableTypes\r\n  color: string\r\n  shadowColor: string\r\n}\r\n\r\ntype TMapState = {\r\n  activeCategory: TBossesAvailableTypes\r\n  bossesList: Array<TBoss>\r\n  isLoading: boolean\r\n  initialized: boolean\r\n  language: string\r\n}\r\n\r\nconst BossList = () => {\r\n  const dispatch = useDispatch()\r\n  const { t, i18n } = useTranslation()\r\n  const { activeCategory, bossesList, isLoading, initialized, language } = useSelector<\r\n    TAppState,\r\n    TMapState\r\n  >((state) => ({\r\n    activeCategory: state.content.bosses.activeCategory,\r\n    bossesList: state.content.bosses.bossesList,\r\n    isLoading: state.content.bosses.isLoading,\r\n    initialized: state.content.bosses.initialized,\r\n    language: state.settings.language,\r\n  }))\r\n\r\n  const bossesSelectorCategories = useMemo(\r\n    () => [\r\n      {\r\n        title: t('bossList.buttons.ease'),\r\n        name: 'ease',\r\n        color: '#BFE88B',\r\n        shadowColor: 'rgba(191, 232, 139, 0.5)',\r\n      },\r\n      {\r\n        title: t('bossList.buttons.medium'),\r\n        name: 'medium',\r\n        color: '#E9F98A',\r\n        shadowColor: 'rgba(233, 249, 138, 0.8)',\r\n      },\r\n      {\r\n        title: t('bossList.buttons.strong'),\r\n        name: 'strong',\r\n        color: '#F9D65D',\r\n        shadowColor: 'rgba(249, 214, 93, 0.6)',\r\n      },\r\n      {\r\n        title: t('bossList.buttons.dangerBoys'),\r\n        name: 'dangerBoys',\r\n        color: '#FFB13C',\r\n        shadowColor: 'rgba(255, 177, 59, 0.5)',\r\n      },\r\n      {\r\n        title: t('bossList.buttons.guildBosses'),\r\n        name: 'guildBosses',\r\n        color: '#FF993B',\r\n        shadowColor: 'rgba(255, 153, 59, 0.4)',\r\n      },\r\n      {\r\n        title: t('bossList.buttons.priests'),\r\n        name: 'priests',\r\n        color: '#FF6712',\r\n        shadowColor: 'rgba(255, 103, 18, 0.3)',\r\n      },\r\n      {\r\n        title: t('bossList.buttons.dragons'),\r\n        name: 'dragons',\r\n        color: '#FF452C',\r\n        shadowColor: 'rgba(255, 69, 44, 0.3)',\r\n      },\r\n      {\r\n        title: t('bossList.buttons.superBosses'),\r\n        name: 'superBosses',\r\n        color: '#E11111',\r\n        shadowColor: 'rgba(225, 17, 17, 0.3)',\r\n      },\r\n    ],\r\n    [t],\r\n  ) as Array<Selector>\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sidebarActions.setActiveCategory('BossList'))\r\n    if (!bossesList.length) {\r\n      dispatch(getBosses(activeCategory))\r\n    }\r\n  }, [])\r\n\r\n  const handleSelectClick = React.useCallback(\r\n    (category: TBossesAvailableTypes) => {\r\n      if (activeCategory !== category) {\r\n        dispatch(bossesActions.setActiveCategory(category))\r\n        dispatch(getBosses(category))\r\n      }\r\n    },\r\n    [activeCategory],\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Boss list</title>\r\n        <meta name=\"description\" content=\"Boss-list page\" />\r\n      </Helmet>\r\n      <div className=\"bossList\">\r\n        <div className={cn('bossList__selector', { en: language === 'en' })}>\r\n          {bossesSelectorCategories?.map((item, idx) => (\r\n            <div\r\n              key={`${item.name}-${idx}`}\r\n              className={cn('bossList__selector--select', {\r\n                active: item.name === activeCategory,\r\n              })}\r\n              style={{\r\n                backgroundColor: `${item.color}`,\r\n                boxShadow: `1px 2px 4px ${item.shadowColor}`,\r\n              }}\r\n              onClick={() => handleSelectClick(item.name)}>\r\n              {item.title}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"bossList__bosses\">\r\n          {bossesList && isLoading\r\n            ? bossesList.map((item, idx) => <BossCardLoader key={idx} />)\r\n            : bossesList.map((el, idx) => (\r\n                <BossCard key={el._id} idx={idx} bossInfo={el} bossesList={bossesList} />\r\n              ))}\r\n          {!initialized && [...Array(12)].map((el, idx) => <BossCardLoader key={idx} />)}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BossList\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\n\r\nimport './RacesStonesGods.scss'\r\n\r\nconst RacesStonesGods = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sidebarActions.setActiveCategory('Races/Stones/Gods'))\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Races/Stones/Gods</title>\r\n        <meta name=\"description\" content=\"Races/Stones/Gods page\" />\r\n      </Helmet>\r\n      <h1 className=\"todo\">Races/Stones/Gods content</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RacesStonesGods\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\n\r\nimport './Alchemy.scss'\r\n\r\nconst Alchemy = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sidebarActions.setActiveCategory('Alchemy'))\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Alchemy</title>\r\n        <meta name=\"description\" content=\"Alchemy page\" />\r\n      </Helmet>\r\n      <h1 className=\"todo\">Alchemy content</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Alchemy\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\n\r\nimport './Equipment.scss'\r\n\r\nconst Equipment = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sidebarActions.setActiveCategory('Equipment'))\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Equipment</title>\r\n        <meta name=\"description\" content=\"Equipment page\" />\r\n      </Helmet>\r\n      <h1 className=\"todo\">Equipment content</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Equipment\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\n\r\nimport './GameRules.scss'\r\n\r\nconst GameRules = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sidebarActions.setActiveCategory('GameRules'))\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Game's rules</title>\r\n        <meta name=\"description\" content=\"Game's rules page\" />\r\n      </Helmet>\r\n      <h1 className=\"todo\">Game's rules content</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GameRules\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\n\r\nimport './Perks.scss'\r\n\r\nconst Perks = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sidebarActions.setActiveCategory('Perks'))\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Perks</title>\r\n        <meta name=\"description\" content=\"Perks page\" />\r\n      </Helmet>\r\n      <h1 className=\"todo\">Perks content</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perks\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\n\r\nimport './Social.scss'\r\n\r\nconst Social = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sidebarActions.setActiveCategory('Social'))\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Social</title>\r\n        <meta name=\"description\" content=\"Social page\" />\r\n      </Helmet>\r\n      <h1 className=\"todo\">Social content</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Social\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\n\r\nimport './Spoilers.scss'\r\n\r\nconst Spoilers = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sidebarActions.setActiveCategory('Spoilers'))\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Spoilers</title>\r\n        <meta name=\"description\" content=\"Spoilers page\" />\r\n      </Helmet>\r\n      <h1 className=\"todo\">Spoilers content</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Spoilers\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\n\r\nimport './TalentsActiveEffectsScreams.scss'\r\n\r\nconst TalentsActiveEffectsScreams = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sidebarActions.setActiveCategory('Talents/Active-effects/Screams'))\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Talents/Active effects/Screams</title>\r\n        <meta name=\"description\" content=\"Talents/Active effects/Screams page\" />\r\n      </Helmet>\r\n      <h1 className=\"todo\">Talents/Active effects/Screams content</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TalentsActiveEffectsScreams\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\n\r\nimport './Tiers.scss'\r\n\r\nconst Tiers = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sidebarActions.setActiveCategory('Tiers'))\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Tiers</title>\r\n        <meta name=\"description\" content=\"Tiers page\" />\r\n      </Helmet>\r\n      <h1 className=\"todo\">Tiers content</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tiers\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { actions as sidebarActions } from '../../store/reducers/sidebar'\r\n\r\nimport './VampiresWerwolves.scss'\r\n\r\nconst VampiresWerewolves = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  React.useEffect(() => {\r\n    dispatch(sidebarActions.setActiveCategory('Vampires/Werewolves'))\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Vampires/Werewolves</title>\r\n        <meta name=\"description\" content=\"Vampires/Werewolves page\" />\r\n      </Helmet>\r\n      <h1 className=\"todo\">Vampires and Werewolves content</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VampiresWerewolves\r\n","import React, { useEffect } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nimport {\n  BossList,\n  RacesStonesGods,\n  Alchemy,\n  Equipment,\n  GameRules,\n  Perks,\n  Social,\n  Spoilers,\n  TalentsActiveEffectsScreams,\n  Tiers,\n  VampiresWerwolves,\n} from './pages'\nimport { Header, Sidebar } from './components'\n\nimport { TAppState } from './types/types'\n\ntype TMapState = {\n  language: string\n}\n\nconst App = () => {\n  const { i18n } = useTranslation()\n  const { language } = useSelector<TAppState, TMapState>((state) => ({\n    language: state.settings.language,\n  }))\n\n  useEffect(() => {\n    i18n.changeLanguage(language)\n  }, [language])\n\n  return (\n    <div className=\"wrapper\">\n      <Helmet defaultTitle=\"Requiem library\" titleTemplate=\"%s | Requiem library\">\n        <meta\n          name=\"description\"\n          content=\"The library about users modification for The Elder Scrolls: Skyrim - Requiem\"\n        />\n        <meta property=\"og:type\" content=\"website\" />\n      </Helmet>\n      <Header />\n      <div className=\"body-wrapper\">\n        <div className=\"container\">\n          <Sidebar />\n          <div className=\"content\">\n            <Switch>\n              <Route path=\"/boss-list\" component={BossList} exact />\n              <Route path=\"/races-stones-gods\" component={RacesStonesGods} exact />\n              <Route path=\"/perks\" component={Perks} exact />\n              <Route path=\"/equipment\" component={Equipment} exact />\n              <Route path=\"/tiers\" component={Tiers} exact />\n              <Route\n                path=\"/talents-active_effects-screams\"\n                component={TalentsActiveEffectsScreams}\n                exact\n              />\n              <Route path=\"/vampires-werewolves\" component={VampiresWerwolves} exact />\n              <Route path=\"/spoilers\" component={Spoilers} exact />\n              <Route path=\"/social\" component={Social} />\n              <Route path=\"/games-rules\" component={GameRules} exact />\n              <Route path=\"/alchemy\" component={Alchemy} exact />\n              <Redirect to=\"/boss-list\" />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport { sidebar, bosses, settings } from './reducers'\r\n\r\nexport type TRootReducer = typeof rootReducer\r\n\r\nconst content = combineReducers({\r\n  bosses,\r\n})\r\n\r\nconst rootReducer = combineReducers({\r\n  sidebar,\r\n  content,\r\n  settings,\r\n})\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { initReactI18next } from 'react-i18next'\nimport i18n from 'i18next'\nimport { resources } from './localization'\n\nimport App from './App'\n\nimport store from './store'\n\nimport './index.scss'\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: 'ru',\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}